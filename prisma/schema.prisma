// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model User {
  id Int @id @default(autoincrement())
  username String?
  image String?
  email String @unique
  password String?
   shoppingCarts ShoppingCart[]
    orders        Order[] 
    favoriteProduct FavoriteProduct[]
  // location String
}
model Category {
  id    Int    @id @default(autoincrement())
  name  String
  icon  String // Assuming you store the icon as a URL or file path
  products Product[]
}

model Product {
  id        Int      @id @default(autoincrement())
  name      String
  category  Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  // Define other fields for the Product model as in the previous schema
  price     Float
  // data      Json
  image String
  colors String[]
  imagePath String[]
  modelPath String[]
  shoppingCarts  ShoppingCart[]
  orders        Order[] 
  favoriteProduct FavoriteProduct[]


}


model ShoppingCart {
  id         Int    @id @default(autoincrement())
  user       User   @relation(fields: [userId], references: [id])
  userId     Int
  product    Product @relation(fields: [productId], references: [id])
  productId  Int
  quantity   Int
}

model Order {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  products   Product[] // Use a JSON or JSONB field to store product details
  quantities Int[]    // Use an array to store the quantity of each product
  orderDate  DateTime
  // Add other fields relevant to the order
}

model FavoriteProduct {
  id         Int    @id @default(autoincrement())
  user       User   @relation(fields: [userId], references: [id])
  userId     Int
  product    Product @relation(fields: [productId], references: [id])
  productId  Int
}
